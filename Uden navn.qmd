---

title: "Reproducible documents"
author: "Jasmin Jensen"
format: html
---


## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
post_meal_data <- read_csv2(here::here("data/post-meal-insulin.csv"))
small_post_meal_data <- select(post_meal_data, id, Age, BMI, Group, auc_pg, auc_ins, glykemi)
```

## About me 

1. Jasmin Emma Rekly Jensen 

2. Department of Biochemistry and Molecular Biology 

**Hi**, i like to *drink a beer* 

## Simple code 
```{r}
3 * 3
```

## Testing for Git 
Hola hola hoÃ¦a 

## Importing a CSV file 
download.file(
  url = "https://zenodo.org/records/4989220/files/Eliasson_data2.csv?download=1",
  destfile = here::here("data/post-meal-insulin.csv")
)

## Showing the data
```{r}
post_meal_data
glimpse(post_meal_data)
```



## ggplot 
```{r}
#| fig-cap: "Distribution of BMI."
#| label: fig-bmi-histo
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```

## Exercise: discrete plots 
```{r}
#| fig-cap: "Glykemi plot"
#| label: fig-glykemi-1
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```

See @fig-glykemi-1 above for a cool plot!

## Plotting two discrete variables 
```{r}
ggplot(post_meal_data, aes(x = Group, fill = as.character(glykemi))) +
  geom_bar()
```
```{r}
ggplot(post_meal_data, aes(x = Group, fill = as.character(glykemi))) +
  geom_bar(position = position_dodge())
```



## Side by side plots 
```{r}
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()
```
```{r}
ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```
```{r side-by-side-figs}
#| label: fig-bmi-glycemia
#| fig-cap: "BMI and glycemia, side by side."
#| fig-subcap:
#|   - "Distribution of BMI."
#|   - "Number of those with glycemia."
#| layout-ncol: 2
ggplot(post_meal_data, aes(x = BMI)) +
  geom_histogram()

ggplot(post_meal_data, aes(x = glykemi)) +
  geom_bar()
```


## Plotting two continuous variables 
```{r}
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point()
```

```{r}
#| fig-cap: "Scatterplot of BMI and the area under the curve for glucose."
#| label: fig-bmi-auc-pg
ggplot(post_meal_data, aes(x = BMI, y = auc_pg)) +
  geom_point() +
  geom_smooth()
```




## Setting up Github
```{r}
usethis::gh_token_help()
```
```{r}
usethis::create_github_token()
```
```{r}
gitcreds::gitcreds_set()
```

usethis::use_github()


## Selecting specific coloumns in a dataset 
```{r}
select(post_meal_data, Age)

select(post_meal_data, Age, BMI, Weight)

select(post_meal_data, -Group)
```


## Select helpers 
```{r}
select(post_meal_data, starts_with("PG"))
select(post_meal_data, ends_with("DXA"))

# All columns containing the number "0"
select(post_meal_data, contains("0"))
```


## Renaming coloumns 
```{r}
small_post_meal_data |>
  rename(auc_glucose = auc_pg)

small_post_meal_data |>
  rename(
    auc_glucose = auc_pg,
    auc_insulin = auc_ins
  )
```


## Select and rename tasks 
```{r}
# Task 1.
post_meal_data |>
  select(contains("OGTT"))

# Task 2.
post_meal_data |>
  select(contains(".."), -contains("..."))

# Task 3.
post_meal_data |>
  rename(
    P.Glucose.minus5.OGTT = P.Glucose..5.OGTT,
    Insulin.minus5.OGTT.X = Insulin..5.OGTT.X
  )

# Task 4.
post_meal_data |>
  select(id, BMI, Length, Weight, Age) |>
  rename(Height = Length)
```
